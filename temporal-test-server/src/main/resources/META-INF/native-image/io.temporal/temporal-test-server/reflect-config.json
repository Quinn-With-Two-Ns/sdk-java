[
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.constant.ClassDesc;"
},
{
  "name":"[Ljava.lang.constant.ConstantDesc;"
},
{
  "name":"android.app.Application"
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.OutputStreamAppender",
  "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]
},
{
  "name":"ch.qos.logback.core.encoder.Encoder",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
  "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]
},
{
  "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
  "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]
},
{
  "name":"ch.qos.logback.core.spi.ContextAware",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture",
  "fields":[{"name":"listeners"}, {"name":"value"}, {"name":"waiters"}]
},
{
  "name":"com.google.common.util.concurrent.AbstractFuture$Waiter",
  "fields":[{"name":"next"}, {"name":"thread"}]
},
{
  "name":"com.google.protobuf.Duration",
  "methods":[{"name":"getNanos","parameterTypes":[] }, {"name":"getSeconds","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Duration$Builder",
  "methods":[{"name":"clearNanos","parameterTypes":[] }, {"name":"clearSeconds","parameterTypes":[] }, {"name":"getNanos","parameterTypes":[] }, {"name":"getSeconds","parameterTypes":[] }, {"name":"setNanos","parameterTypes":["int"] }, {"name":"setSeconds","parameterTypes":["long"] }]
},
{
  "name":"com.google.protobuf.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Timestamp",
  "methods":[{"name":"getNanos","parameterTypes":[] }, {"name":"getSeconds","parameterTypes":[] }]
},
{
  "name":"com.google.protobuf.Timestamp$Builder",
  "methods":[{"name":"clearNanos","parameterTypes":[] }, {"name":"clearSeconds","parameterTypes":[] }, {"name":"getNanos","parameterTypes":[] }, {"name":"getSeconds","parameterTypes":[] }, {"name":"setNanos","parameterTypes":["int"] }, {"name":"setSeconds","parameterTypes":["long"] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.tools.attach.VirtualMachine"
},
{
  "name":"groovy.lang.Binding"
},
{
  "name":"io.grpc.census.InternalCensusStatsAccessor"
},
{
  "name":"io.grpc.census.InternalCensusTracingAccessor"
},
{
  "name":"io.grpc.internal.DnsNameResolverProvider"
},
{
  "name":"io.grpc.internal.PickFirstLoadBalancerProvider"
},
{
  "name":"io.grpc.internal.SerializingExecutor",
  "fields":[{"name":"runState"}]
},
{
  "name":"io.grpc.override.ContextStorageOverride"
},
{
  "name":"io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.perfmark.impl.SecretPerfMarkImpl$PerfMarkImpl"
},
{
  "name":"io.temporal.api.common.v1.Link$WorkflowEvent",
  "methods":[{"name":"getEventRef","parameterTypes":[] }, {"name":"getNamespace","parameterTypes":[] }, {"name":"getNamespaceBytes","parameterTypes":[] }, {"name":"getReferenceCase","parameterTypes":[] }, {"name":"getRunId","parameterTypes":[] }, {"name":"getRunIdBytes","parameterTypes":[] }, {"name":"getWorkflowId","parameterTypes":[] }, {"name":"getWorkflowIdBytes","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.common.v1.Link$WorkflowEvent$Builder",
  "methods":[{"name":"clearEventRef","parameterTypes":[] }, {"name":"clearNamespace","parameterTypes":[] }, {"name":"clearReference","parameterTypes":[] }, {"name":"clearRunId","parameterTypes":[] }, {"name":"clearWorkflowId","parameterTypes":[] }, {"name":"getEventRef","parameterTypes":[] }, {"name":"getEventRefBuilder","parameterTypes":[] }, {"name":"getNamespace","parameterTypes":[] }, {"name":"getReferenceCase","parameterTypes":[] }, {"name":"getRunId","parameterTypes":[] }, {"name":"getWorkflowId","parameterTypes":[] }, {"name":"setEventRef","parameterTypes":["io.temporal.api.common.v1.Link$WorkflowEvent$EventReference"] }, {"name":"setNamespace","parameterTypes":["java.lang.String"] }, {"name":"setNamespaceBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setRunId","parameterTypes":["java.lang.String"] }, {"name":"setRunIdBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setWorkflowId","parameterTypes":["java.lang.String"] }, {"name":"setWorkflowIdBytes","parameterTypes":["com.google.protobuf.ByteString"] }]
},
{
  "name":"io.temporal.api.common.v1.Link$WorkflowEvent$EventReference",
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.common.v1.WorkflowExecution",
  "methods":[{"name":"getRunId","parameterTypes":[] }, {"name":"getRunIdBytes","parameterTypes":[] }, {"name":"getWorkflowId","parameterTypes":[] }, {"name":"getWorkflowIdBytes","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.common.v1.WorkflowExecution$Builder",
  "methods":[{"name":"clearRunId","parameterTypes":[] }, {"name":"clearWorkflowId","parameterTypes":[] }, {"name":"getRunId","parameterTypes":[] }, {"name":"getWorkflowId","parameterTypes":[] }, {"name":"setRunId","parameterTypes":["java.lang.String"] }, {"name":"setRunIdBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setWorkflowId","parameterTypes":["java.lang.String"] }, {"name":"setWorkflowIdBytes","parameterTypes":["com.google.protobuf.ByteString"] }]
},
{
  "name":"io.temporal.api.errordetails.v1.MultiOperationExecutionFailure",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getStatuses","parameterTypes":["int"] }, {"name":"getStatusesCount","parameterTypes":[] }, {"name":"getStatusesList","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.errordetails.v1.MultiOperationExecutionFailure$Builder",
  "methods":[{"name":"addStatuses","parameterTypes":["io.temporal.api.errordetails.v1.MultiOperationExecutionFailure$OperationStatus"] }, {"name":"clearStatuses","parameterTypes":[] }, {"name":"getStatuses","parameterTypes":["int"] }, {"name":"getStatusesBuilder","parameterTypes":["int"] }, {"name":"getStatusesCount","parameterTypes":[] }, {"name":"getStatusesList","parameterTypes":[] }, {"name":"setStatuses","parameterTypes":["int","io.temporal.api.errordetails.v1.MultiOperationExecutionFailure$OperationStatus"] }]
},
{
  "name":"io.temporal.api.errordetails.v1.MultiOperationExecutionFailure$OperationStatus",
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getRunId","parameterTypes":[] }, {"name":"getRunIdBytes","parameterTypes":[] }, {"name":"getStartRequestId","parameterTypes":[] }, {"name":"getStartRequestIdBytes","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure$Builder",
  "methods":[{"name":"clearRunId","parameterTypes":[] }, {"name":"clearStartRequestId","parameterTypes":[] }, {"name":"getRunId","parameterTypes":[] }, {"name":"getStartRequestId","parameterTypes":[] }, {"name":"setRunId","parameterTypes":["java.lang.String"] }, {"name":"setRunIdBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setStartRequestId","parameterTypes":["java.lang.String"] }, {"name":"setStartRequestIdBytes","parameterTypes":["com.google.protobuf.ByteString"] }]
},
{
  "name":"io.temporal.api.failure.v1.Failure",
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.update.v1.Acceptance",
  "methods":[{"name":"getAcceptedRequest","parameterTypes":[] }, {"name":"getAcceptedRequestMessageId","parameterTypes":[] }, {"name":"getAcceptedRequestMessageIdBytes","parameterTypes":[] }, {"name":"getAcceptedRequestSequencingEventId","parameterTypes":[] }, {"name":"getDefaultInstance","parameterTypes":[] }, {"name":"hasAcceptedRequest","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.update.v1.Acceptance$Builder",
  "methods":[{"name":"clearAcceptedRequest","parameterTypes":[] }, {"name":"clearAcceptedRequestMessageId","parameterTypes":[] }, {"name":"clearAcceptedRequestSequencingEventId","parameterTypes":[] }, {"name":"getAcceptedRequest","parameterTypes":[] }, {"name":"getAcceptedRequestBuilder","parameterTypes":[] }, {"name":"getAcceptedRequestMessageId","parameterTypes":[] }, {"name":"getAcceptedRequestSequencingEventId","parameterTypes":[] }, {"name":"hasAcceptedRequest","parameterTypes":[] }, {"name":"setAcceptedRequest","parameterTypes":["io.temporal.api.update.v1.Request"] }, {"name":"setAcceptedRequestMessageId","parameterTypes":["java.lang.String"] }, {"name":"setAcceptedRequestMessageIdBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setAcceptedRequestSequencingEventId","parameterTypes":["long"] }]
},
{
  "name":"io.temporal.api.update.v1.Input",
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.update.v1.Meta",
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.update.v1.Outcome",
  "methods":[{"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.update.v1.Rejection",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getFailure","parameterTypes":[] }, {"name":"getRejectedRequest","parameterTypes":[] }, {"name":"getRejectedRequestMessageId","parameterTypes":[] }, {"name":"getRejectedRequestMessageIdBytes","parameterTypes":[] }, {"name":"getRejectedRequestSequencingEventId","parameterTypes":[] }, {"name":"hasFailure","parameterTypes":[] }, {"name":"hasRejectedRequest","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.update.v1.Rejection$Builder",
  "methods":[{"name":"clearFailure","parameterTypes":[] }, {"name":"clearRejectedRequest","parameterTypes":[] }, {"name":"clearRejectedRequestMessageId","parameterTypes":[] }, {"name":"clearRejectedRequestSequencingEventId","parameterTypes":[] }, {"name":"getFailure","parameterTypes":[] }, {"name":"getFailureBuilder","parameterTypes":[] }, {"name":"getRejectedRequest","parameterTypes":[] }, {"name":"getRejectedRequestBuilder","parameterTypes":[] }, {"name":"getRejectedRequestMessageId","parameterTypes":[] }, {"name":"getRejectedRequestSequencingEventId","parameterTypes":[] }, {"name":"hasFailure","parameterTypes":[] }, {"name":"hasRejectedRequest","parameterTypes":[] }, {"name":"setFailure","parameterTypes":["io.temporal.api.failure.v1.Failure"] }, {"name":"setRejectedRequest","parameterTypes":["io.temporal.api.update.v1.Request"] }, {"name":"setRejectedRequestMessageId","parameterTypes":["java.lang.String"] }, {"name":"setRejectedRequestMessageIdBytes","parameterTypes":["com.google.protobuf.ByteString"] }, {"name":"setRejectedRequestSequencingEventId","parameterTypes":["long"] }]
},
{
  "name":"io.temporal.api.update.v1.Request",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getInput","parameterTypes":[] }, {"name":"getMeta","parameterTypes":[] }, {"name":"hasInput","parameterTypes":[] }, {"name":"hasMeta","parameterTypes":[] }, {"name":"newBuilder","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.update.v1.Request$Builder",
  "methods":[{"name":"clearInput","parameterTypes":[] }, {"name":"clearMeta","parameterTypes":[] }, {"name":"getInput","parameterTypes":[] }, {"name":"getInputBuilder","parameterTypes":[] }, {"name":"getMeta","parameterTypes":[] }, {"name":"getMetaBuilder","parameterTypes":[] }, {"name":"hasInput","parameterTypes":[] }, {"name":"hasMeta","parameterTypes":[] }, {"name":"setInput","parameterTypes":["io.temporal.api.update.v1.Input"] }, {"name":"setMeta","parameterTypes":["io.temporal.api.update.v1.Meta"] }]
},
{
  "name":"io.temporal.api.update.v1.Response",
  "methods":[{"name":"getDefaultInstance","parameterTypes":[] }, {"name":"getMeta","parameterTypes":[] }, {"name":"getOutcome","parameterTypes":[] }, {"name":"hasMeta","parameterTypes":[] }, {"name":"hasOutcome","parameterTypes":[] }]
},
{
  "name":"io.temporal.api.update.v1.Response$Builder",
  "methods":[{"name":"clearMeta","parameterTypes":[] }, {"name":"clearOutcome","parameterTypes":[] }, {"name":"getMeta","parameterTypes":[] }, {"name":"getMetaBuilder","parameterTypes":[] }, {"name":"getOutcome","parameterTypes":[] }, {"name":"getOutcomeBuilder","parameterTypes":[] }, {"name":"hasMeta","parameterTypes":[] }, {"name":"hasOutcome","parameterTypes":[] }, {"name":"setMeta","parameterTypes":["io.temporal.api.update.v1.Meta"] }, {"name":"setOutcome","parameterTypes":["io.temporal.api.update.v1.Outcome"] }]
},
{
  "name":"io.temporal.client.WorkflowClient",
  "methods":[{"name":"fetchHistory","parameterTypes":["java.lang.String"] }, {"name":"getInternal","parameterTypes":[] }, {"name":"getOptions","parameterTypes":[] }, {"name":"getWorkflowServiceStubs","parameterTypes":[] }, {"name":"newUntypedWorkflowStub","parameterTypes":["java.lang.String","io.temporal.client.WorkflowOptions"] }, {"name":"newWorkflowStub","parameterTypes":["java.lang.Class","io.temporal.client.WorkflowOptions"] }]
},
{
  "name":"io.temporal.internal.activity.ActivityTaskExecutors$BaseActivityTaskExecutor",
  "methods":[{"name":"execute","parameterTypes":["io.temporal.internal.activity.ActivityInfoInternal","com.uber.m3.tally.Scope"] }]
},
{
  "name":"io.temporal.internal.activity.ActivityTaskExecutors$DynamicActivityImplementation"
},
{
  "name":"io.temporal.internal.activity.ActivityTaskExecutors$POJOActivityImplementation"
},
{
  "name":"io.temporal.internal.sync.DynamicSyncWorkflowDefinition",
  "methods":[{"name":"execute","parameterTypes":["io.temporal.common.interceptors.Header","java.util.Optional"] }]
},
{
  "name":"io.temporal.internal.sync.POJOWorkflowImplementationFactory$POJOWorkflowImplementation",
  "methods":[{"name":"execute","parameterTypes":["io.temporal.common.interceptors.Header","java.util.Optional"] }]
},
{
  "name":"io.temporal.internal.testservice.SelfAdvancingTimerImplTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setUp","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"tearDown","parameterTypes":[] }, {"name":"testOrdering","parameterTypes":[] }, {"name":"testSchedule","parameterTypes":[] }, {"name":"testSkip","parameterTypes":[] }, {"name":"testSkipTo","parameterTypes":[] }]
},
{
  "name":"io.temporal.serviceclient.ServiceStubs",
  "methods":[{"name":"awaitTermination","parameterTypes":["long","java.util.concurrent.TimeUnit"] }, {"name":"blockingStub","parameterTypes":[] }, {"name":"futureStub","parameterTypes":[] }, {"name":"getRawChannel","parameterTypes":[] }, {"name":"getServerCapabilities","parameterTypes":[] }, {"name":"shutdownNow","parameterTypes":[] }]
},
{
  "name":"io.temporal.serviceclient.WorkflowServiceStubs",
  "methods":[{"name":"getOptions","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.ChildLivesLongerThanParentTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"testAbandonChild","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.ChildLivesLongerThanParentTest$ChildWorkflowWithTimerImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.ChildLivesLongerThanParentTest$TestWorkflowImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.ContinueAsNewTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"repeatedFailure","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.ContinueAsNewTest$TestWorkflow",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.DescribeNamespaceTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"noNamespaceSet","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"testDescribeNamespace","parameterTypes":[] }, {"name":"testDescribeNamespaceCapabilities","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.DescribeWorkflowExecutionTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"testCanceledWorkflow","parameterTypes":[] }, {"name":"testChildWorkflow","parameterTypes":[] }, {"name":"testFailedActivity","parameterTypes":[] }, {"name":"testFailedWorkflow","parameterTypes":[] }, {"name":"testSuccessfulActivity","parameterTypes":[] }, {"name":"testTerminatedWorkflow","parameterTypes":[] }, {"name":"testWorkflowDoesNotExist","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.DescribeWorkflowExecutionTest$TestDescribeActivity",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"run","parameterTypes":["java.lang.String","boolean","int"] }]
},
{
  "name":"io.temporal.testserver.functional.DescribeWorkflowExecutionTest$TestDescribeActivityImpl",
  "queryAllPublicMethods":true
},
{
  "name":"io.temporal.testserver.functional.DescribeWorkflowExecutionTest$TestDescribeWorkflow",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"run","parameterTypes":["java.lang.String","java.lang.String","boolean","int"] }]
},
{
  "name":"io.temporal.testserver.functional.DescribeWorkflowExecutionTest$TestDescribeWorkflowImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.MultiOperationTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"failWhenMultiOperationListIsInvalid","parameterTypes":[] }, {"name":"failWhenMultiOperationWorkflowIDsNotMatching","parameterTypes":[] }, {"name":"failWhenStartOperationIsInvalid","parameterTypes":[] }, {"name":"failWhenUpdateOperationIsInvalid","parameterTypes":[] }, {"name":"receiveResponseAfterTimeout","parameterTypes":[] }, {"name":"startAndUpdate","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.MultiOperationTest$UpdateWorkflowImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.NexusEndpointTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"checkExternal","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"testCreate","parameterTypes":[] }, {"name":"testDelete","parameterTypes":[] }, {"name":"testGet","parameterTypes":[] }, {"name":"testList","parameterTypes":[] }, {"name":"testUpdate","parameterTypes":[] }, {"name":"testValidateEndpointSpec","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.NexusWorkflowTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setup","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"tearDown","parameterTypes":[] }, {"name":"testNexusOperationAsyncCompletion","parameterTypes":[] }, {"name":"testNexusOperationAsyncCompletionBeforeStart","parameterTypes":[] }, {"name":"testNexusOperationAsyncHandlerCanceled","parameterTypes":[] }, {"name":"testNexusOperationAsyncHandlerTerminated","parameterTypes":[] }, {"name":"testNexusOperationAsyncHandlerTimeout","parameterTypes":[] }, {"name":"testNexusOperationError","parameterTypes":[] }, {"name":"testNexusOperationHandlerError","parameterTypes":[] }, {"name":"testNexusOperationInvalidRef","parameterTypes":[] }, {"name":"testNexusOperationSyncCompletion","parameterTypes":[] }, {"name":"testNexusOperationTimeout_AfterCancel","parameterTypes":[] }, {"name":"testNexusOperationTimeout_AfterStart","parameterTypes":[] }, {"name":"testNexusOperationTimeout_BeforeStart","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.NexusWorkflowTest$EchoNexusHandlerWorkflowImpl",
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.temporal.testserver.functional.RepeatedWorkflowTaskFailuresTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"repeatedFailure","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.RepeatedWorkflowTaskFailuresTest$TestWorkflow",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.SignalLinksTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"testSignalWithLinks","parameterTypes":[] }, {"name":"testSignalWithStartLinks","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.SignalLinksTest$TestWorkflow",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"run","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.SignalLinksTest$TestWorkflowImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.WorkflowCachingTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setUp","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"taskCompletionWithStickyExecutionAttributesWillScheduleWorkflowTasksOnStickyTaskQueue","parameterTypes":[] }, {"name":"taskFailureWillRescheduleTheTaskOnTheGlobalList","parameterTypes":[] }, {"name":"tearDown","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.WorkflowIdConflictPolicyTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"conflictPolicyFail","parameterTypes":[] }, {"name":"conflictPolicyUseExisting","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.WorkflowIdConflictPolicyTest$SignalWorkflowImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.WorkflowIdReusePolicyTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"allowDuplicateAfterFailed","parameterTypes":[] }, {"name":"alreadyRunningWorkflowBlocksSecondEvenWithAllowDuplicate","parameterTypes":[] }, {"name":"deduplicateRequestWorkflowAlreadyCompleted","parameterTypes":[] }, {"name":"deduplicateRequestWorkflowStillRunning","parameterTypes":[] }, {"name":"invalidWorkflowIdReusePolicy","parameterTypes":[] }, {"name":"rejectDuplicateStopsAnotherAfterFailed","parameterTypes":[] }, {"name":"secondWorkflowTerminatesFirst","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.WorkflowIdReusePolicyTest$FailingWorkflowImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.WorkflowIdReusePolicyTest$ForeverWorkflowImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.WorkflowUpdateTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"duplicateRejectedUpdate","parameterTypes":[] }, {"name":"duplicateUpdate","parameterTypes":[] }, {"name":"getCompletedUpdateOfCompletedWorkflow","parameterTypes":[] }, {"name":"getIncompleteUpdateOfCompletedWorkflow","parameterTypes":[] }, {"name":"pollUpdateBadUpdate","parameterTypes":[] }, {"name":"pollUpdateBadWorkflow","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"update","parameterTypes":[] }, {"name":"updateAdmittedNotSupported","parameterTypes":[] }, {"name":"updateAndPollByWorkflowId","parameterTypes":[] }, {"name":"updateAndPollCompletedWorkflow","parameterTypes":[] }, {"name":"updateBadWorkflow","parameterTypes":[] }, {"name":"updateCompleteWorkflow","parameterTypes":[] }, {"name":"updateNotAcceptedTimeout","parameterTypes":[] }, {"name":"updateRejected","parameterTypes":[] }, {"name":"updateWaitCompletedTimeout","parameterTypes":[] }, {"name":"updateWaitStage","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.WorkflowUpdateTest$UpdateWorkflowImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.activity.ActivityWithAnOutdatedTaskTokenTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setUp","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"testAnActivityWithOutdatedTaskTokenCantCompleteAnExecution","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.activity.ActivityWithAnOutdatedTaskTokenTest$TestActivity",
  "queryAllPublicMethods":true
},
{
  "name":"io.temporal.testserver.functional.activity.ActivityWithAnOutdatedTaskTokenTest$TestWorkflow",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.common.TestActivities$ActivityReturnsString",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"execute","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.common.TestWorkflows$PrimitiveChildWorkflow",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"execute","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.common.TestWorkflows$PrimitiveNexusHandlerWorkflow",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.temporal.testserver.functional.common.TestWorkflows$PrimitiveWorkflow",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"execute","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.common.TestWorkflows$UpdateType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"io.temporal.testserver.functional.common.TestWorkflows$WorkflowReturnsString",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"execute","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.common.TestWorkflows$WorkflowTakesBool",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"execute","parameterTypes":["boolean"] }]
},
{
  "name":"io.temporal.testserver.functional.common.TestWorkflows$WorkflowWithSignal",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"execute","parameterTypes":[] }, {"name":"signal","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.common.TestWorkflows$WorkflowWithUpdate",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"execute","parameterTypes":[] }, {"name":"signal","parameterTypes":[] }, {"name":"update","parameterTypes":["io.temporal.testserver.functional.common.TestWorkflows$UpdateType"] }, {"name":"updateValidator","parameterTypes":["io.temporal.testserver.functional.common.TestWorkflows$UpdateType"] }]
},
{
  "name":"io.temporal.testserver.functional.searchattributes.IncorrectStartWorkflowSearchAttributesTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"searchAttributeIsIncorrectValueType","parameterTypes":[] }, {"name":"searchAttributeIsNotRegistered","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.searchattributes.IncorrectStartWorkflowSearchAttributesTest$DummyWorkflow",
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.temporal.testserver.functional.searchattributes.IncorrectUpsertSearchAttributesTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"searchAttributeIsIncorrectValueType","parameterTypes":[] }, {"name":"searchAttributeIsNotRegistered","parameterTypes":[] }, {"name":"setUp","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.searchattributes.IncorrectUpsertSearchAttributesTest$UpsertingWorkflow",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.timeskipping.SleepingActivity",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.temporal.testserver.functional.timeskipping.TimeSkippingFromAnActivityTest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"setUp","parameterTypes":[] }, {"name":"suite","parameterTypes":[] }, {"name":"tearDown","parameterTypes":[] }, {"name":"testAbandonActivity","parameterTypes":[] }]
},
{
  "name":"io.temporal.testserver.functional.timeskipping.TimeSkippingFromAnActivityTest$SleepingActivityImpl",
  "queryAllPublicMethods":true
},
{
  "name":"io.temporal.testserver.functional.timeskipping.TimeSkippingFromAnActivityTest$TestWorkflowImpl",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Serializable",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.Class",
  "methods":[{"name":"forName","parameterTypes":["java.lang.String"] }, {"name":"getAnnotatedInterfaces","parameterTypes":[] }, {"name":"getAnnotatedSuperclass","parameterTypes":[] }, {"name":"getDeclaredMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"getMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"getModule","parameterTypes":[] }, {"name":"getNestHost","parameterTypes":[] }, {"name":"getNestMembers","parameterTypes":[] }, {"name":"getPermittedSubclasses","parameterTypes":[] }, {"name":"getRecordComponents","parameterTypes":[] }, {"name":"isNestmateOf","parameterTypes":["java.lang.Class"] }, {"name":"isRecord","parameterTypes":[] }, {"name":"isSealed","parameterTypes":[] }]
},
{
  "name":"java.lang.ClassLoader",
  "methods":[{"name":"getDefinedPackage","parameterTypes":["java.lang.String"] }, {"name":"getUnnamedModule","parameterTypes":[] }, {"name":"registerAsParallelCapable","parameterTypes":[] }]
},
{
  "name":"java.lang.Enum"
},
{
  "name":"java.lang.Module",
  "methods":[{"name":"addExports","parameterTypes":["java.lang.String","java.lang.Module"] }, {"name":"addReads","parameterTypes":["java.lang.Module"] }, {"name":"canRead","parameterTypes":["java.lang.Module"] }, {"name":"getClassLoader","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPackages","parameterTypes":[] }, {"name":"getResourceAsStream","parameterTypes":["java.lang.String"] }, {"name":"isExported","parameterTypes":["java.lang.String"] }, {"name":"isExported","parameterTypes":["java.lang.String","java.lang.Module"] }, {"name":"isNamed","parameterTypes":[] }, {"name":"isOpen","parameterTypes":["java.lang.String","java.lang.Module"] }]
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"clone","parameterTypes":[] }, {"name":"getClass","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"java.lang.ProcessHandle",
  "methods":[{"name":"current","parameterTypes":[] }, {"name":"pid","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"feature","parameterTypes":[] }]
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.StackWalker",
  "methods":[{"name":"getInstance","parameterTypes":["java.lang.StackWalker$Option"] }, {"name":"walk","parameterTypes":["java.util.function.Function"] }]
},
{
  "name":"java.lang.StackWalker$Option"
},
{
  "name":"java.lang.StackWalker$StackFrame",
  "methods":[{"name":"getDeclaringClass","parameterTypes":[] }]
},
{
  "name":"java.lang.System",
  "methods":[{"name":"getSecurityManager","parameterTypes":[] }]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}]
},
{
  "name":"java.lang.Throwable",
  "methods":[{"name":"getSuppressed","parameterTypes":[] }]
},
{
  "name":"java.lang.WeakPairMap"
},
{
  "name":"java.lang.WeakPairMap$Pair"
},
{
  "name":"java.lang.WeakPairMap$Pair$Weak"
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.lang.constant.ClassDesc",
  "methods":[{"name":"descriptorString","parameterTypes":[] }, {"name":"ofDescriptor","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.constant.ConstantDesc"
},
{
  "name":"java.lang.constant.DirectMethodHandleDesc",
  "methods":[{"name":"lookupDescriptor","parameterTypes":[] }, {"name":"methodName","parameterTypes":[] }, {"name":"owner","parameterTypes":[] }, {"name":"refKind","parameterTypes":[] }]
},
{
  "name":"java.lang.constant.DirectMethodHandleDesc$Kind",
  "methods":[{"name":"valueOf","parameterTypes":["int","boolean"] }]
},
{
  "name":"java.lang.constant.DynamicConstantDesc",
  "methods":[{"name":"bootstrapArgs","parameterTypes":[] }, {"name":"bootstrapMethod","parameterTypes":[] }, {"name":"constantName","parameterTypes":[] }, {"name":"constantType","parameterTypes":[] }, {"name":"ofCanonical","parameterTypes":["java.lang.constant.DirectMethodHandleDesc","java.lang.String","java.lang.constant.ClassDesc","java.lang.constant.ConstantDesc[]"] }]
},
{
  "name":"java.lang.constant.MethodHandleDesc",
  "methods":[{"name":"invocationType","parameterTypes":[] }, {"name":"of","parameterTypes":["java.lang.constant.DirectMethodHandleDesc$Kind","java.lang.constant.ClassDesc","java.lang.String","java.lang.String"] }]
},
{
  "name":"java.lang.constant.MethodTypeDesc",
  "methods":[{"name":"of","parameterTypes":["java.lang.constant.ClassDesc","java.lang.constant.ClassDesc[]"] }, {"name":"ofDescriptor","parameterTypes":["java.lang.String"] }, {"name":"parameterArray","parameterTypes":[] }, {"name":"returnType","parameterTypes":[] }]
},
{
  "name":"java.lang.instrument.Instrumentation",
  "methods":[{"name":"redefineModule","parameterTypes":["java.lang.Module","java.util.Set","java.util.Map","java.util.Map","java.util.Set","java.util.Map"] }]
},
{
  "name":"java.lang.invoke.MethodHandle",
  "methods":[{"name":"bindTo","parameterTypes":["java.lang.Object"] }, {"name":"invokeWithArguments","parameterTypes":["java.lang.Object[]"] }]
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"lookup","parameterTypes":[] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[{"name":"findVirtual","parameterTypes":["java.lang.Class","java.lang.String","java.lang.invoke.MethodType"] }]
},
{
  "name":"java.lang.invoke.MethodType",
  "methods":[{"name":"methodType","parameterTypes":["java.lang.Class","java.lang.Class[]"] }]
},
{
  "name":"java.lang.reflect.AccessibleObject",
  "methods":[{"name":"setAccessible","parameterTypes":["boolean"] }]
},
{
  "name":"java.lang.reflect.AnnotatedArrayType",
  "methods":[{"name":"getAnnotatedGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedParameterizedType",
  "methods":[{"name":"getAnnotatedActualTypeArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedType",
  "methods":[{"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedWildcardType",
  "methods":[{"name":"getAnnotatedUpperBounds","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Executable",
  "methods":[{"name":"getAnnotatedExceptionTypes","parameterTypes":[] }, {"name":"getAnnotatedParameterTypes","parameterTypes":[] }, {"name":"getAnnotatedReceiverType","parameterTypes":[] }, {"name":"getParameterCount","parameterTypes":[] }, {"name":"getParameters","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Field",
  "methods":[{"name":"getAnnotatedType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Method",
  "methods":[{"name":"getAnnotatedReturnType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Parameter",
  "methods":[{"name":"getModifiers","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"isNamePresent","parameterTypes":[] }]
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.security.AccessController",
  "methods":[{"name":"doPrivileged","parameterTypes":["java.security.PrivilegedAction"] }, {"name":"doPrivileged","parameterTypes":["java.security.PrivilegedExceptionAction"] }]
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.time.Clock",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getZone","parameterTypes":[] }, {"name":"instant","parameterTypes":[] }, {"name":"withZone","parameterTypes":["java.time.ZoneId"] }]
},
{
  "name":"java.time.Instant",
  "methods":[{"name":"getEpochSecond","parameterTypes":[] }, {"name":"getNano","parameterTypes":[] }, {"name":"now","parameterTypes":[] }]
},
{
  "name":"java.time.InstantSource",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.HashSet"
},
{
  "name":"java.util.LinkedHashSet"
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"java.util.concurrent.ArrayBlockingQueue"
},
{
  "name":"java.util.concurrent.ForkJoinTask",
  "fields":[{"name":"aux"}, {"name":"status"}]
},
{
  "name":"java.util.concurrent.ScheduledThreadPoolExecutor",
  "methods":[{"name":"setRemoveOnCancelPolicy","parameterTypes":["boolean"] }]
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.LongAdder",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"add","parameterTypes":["long"] }, {"name":"sum","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64$Cell",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.locks.AbstractOwnableSynchronizer"
},
{
  "name":"java.util.concurrent.locks.AbstractQueuedSynchronizer"
},
{
  "name":"java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
},
{
  "name":"java.util.concurrent.locks.ReentrantLock"
},
{
  "name":"java.util.concurrent.locks.ReentrantLock$NonfairSync"
},
{
  "name":"java.util.concurrent.locks.ReentrantLock$Sync"
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"jdk.internal.misc.Unsafe"
},
{
  "name":"kotlin.jvm.JvmInline"
},
{
  "name":"libcore.io.Memory"
},
{
  "name":"net.bytebuddy.agent.Installer",
  "methods":[{"name":"agentmain","parameterTypes":["java.lang.String","java.lang.instrument.Instrumentation"] }, {"name":"getInstrumentation","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$AllArguments",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"includeSelf","parameterTypes":[] }, {"name":"nullIfEmpty","parameterTypes":[] }, {"name":"readOnly","parameterTypes":[] }, {"name":"typing","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$Argument",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"optional","parameterTypes":[] }, {"name":"readOnly","parameterTypes":[] }, {"name":"typing","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$Enter",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readOnly","parameterTypes":[] }, {"name":"typing","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$Exit",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$FieldGetterHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$FieldSetterHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$Local",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$OnMethodEnter",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"inline","parameterTypes":[] }, {"name":"prependLineNumber","parameterTypes":[] }, {"name":"skipOn","parameterTypes":[] }, {"name":"skipOnIndex","parameterTypes":[] }, {"name":"suppress","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$OnMethodExit",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"backupArguments","parameterTypes":[] }, {"name":"inline","parameterTypes":[] }, {"name":"onThrowable","parameterTypes":[] }, {"name":"repeatOn","parameterTypes":[] }, {"name":"repeatOnIndex","parameterTypes":[] }, {"name":"suppress","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$Origin",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$Return",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"readOnly","parameterTypes":[] }, {"name":"typing","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$SelfCallHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.asm.Advice$This",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"optional","parameterTypes":[] }, {"name":"readOnly","parameterTypes":[] }, {"name":"typing","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.asm.Advice$Thrown",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedField$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForWildcardUpperBoundType$AnnotatedWildcardType",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.AllArguments",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"includeSelf","parameterTypes":[] }, {"name":"nullIfEmpty","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Argument",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindingMechanic","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic"
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.BindingPriority",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Default",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultCall",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultCallHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultMethodHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldGetterHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldSetterHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"declaringType","parameterTypes":[] }, {"name":"value","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Origin",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"cache","parameterTypes":[] }, {"name":"privileged","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.StubValue",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Super",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperCall",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"fallbackToDefault","parameterTypes":[] }, {"name":"nullIfImpossible","parameterTypes":[] }, {"name":"serializableProxy","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperCallHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.SuperMethodHandle",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.This",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"optional","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.utility.Invoker",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.Invoker$Dispatcher",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.utility.JavaConstant$Simple$Dispatcher",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfClassDesc",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDirectMethodHandleDesc",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDirectMethodHandleDesc$ForKind",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDynamicConstantDesc",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfMethodHandleDesc",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfMethodTypeDesc",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.JavaModule$Module",
  "queryAllPublicMethods":true
},
{
  "name":"net.bytebuddy.utility.JavaModule$Resolver",
  "queryAllPublicMethods":true
},
{
  "name":"org.hamcrest.core.StringStartsWith",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.hamcrest.core.SubstringMatcher",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.mockito.codegen.Clock$MockitoMock$p6i0i91op99200N",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.codegen.Clock$MockitoMock$p6i0i91op99200N$auxiliary$4cscpe1S"
},
{
  "name":"org.mockito.codegen.Clock$MockitoMock$p6i0i91op99200N$auxiliary$7m9oaq0S"
},
{
  "name":"org.mockito.configuration.MockitoConfiguration"
},
{
  "name":"org.mockito.internal.PremainAttach",
  "methods":[{"name":"getInstrumentation","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.configuration.DefaultDoNotMockEnforcer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.configuration.InjectingAnnotationEngine",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockAccess",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodAdvice",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForEquals",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForHashCode",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForStatic",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodAdvice$Identifier",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForEquals",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForHashCode",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$ForWriteReplace",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher"
},
{
  "name":"org.mockito.internal.creation.instance.DefaultInstantiatorProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.util.ConsoleMockitoLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.mockito.internal.util.reflection.InstrumentationMemberAccessor$Dispatcher",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.mockito.internal.util.reflection.ModuleMemberAccessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.robolectric.Robolectric"
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"arrayBaseOffset","parameterTypes":["java.lang.Class"] }, {"name":"arrayIndexScale","parameterTypes":["java.lang.Class"] }, {"name":"copyMemory","parameterTypes":["long","long","long"] }, {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, {"name":"getBoolean","parameterTypes":["java.lang.Object","long"] }, {"name":"getByte","parameterTypes":["long"] }, {"name":"getByte","parameterTypes":["java.lang.Object","long"] }, {"name":"getDouble","parameterTypes":["java.lang.Object","long"] }, {"name":"getFloat","parameterTypes":["java.lang.Object","long"] }, {"name":"getInt","parameterTypes":["long"] }, {"name":"getInt","parameterTypes":["java.lang.Object","long"] }, {"name":"getLong","parameterTypes":["long"] }, {"name":"getLong","parameterTypes":["java.lang.Object","long"] }, {"name":"getObject","parameterTypes":["java.lang.Object","long"] }, {"name":"objectFieldOffset","parameterTypes":["java.lang.reflect.Field"] }, {"name":"putBoolean","parameterTypes":["java.lang.Object","long","boolean"] }, {"name":"putByte","parameterTypes":["long","byte"] }, {"name":"putByte","parameterTypes":["java.lang.Object","long","byte"] }, {"name":"putDouble","parameterTypes":["java.lang.Object","long","double"] }, {"name":"putFloat","parameterTypes":["java.lang.Object","long","float"] }, {"name":"putInt","parameterTypes":["long","int"] }, {"name":"putInt","parameterTypes":["java.lang.Object","long","int"] }, {"name":"putLong","parameterTypes":["long","long"] }, {"name":"putLong","parameterTypes":["java.lang.Object","long","long"] }, {"name":"putObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]